name: Publicação do backend

on:
  workflow_call:
    inputs:
      DOCKER_FILE:
        required: true
        type: string
      PATH_PROJECT:
        required: true
        type: string
      CONFIG_FILE:
        required: true
        type: string
      DOTNET_VERSION:
        required: true
        type: string
      ECR_IMAGE:
        required: true
        type: string
      ECS_CLUSTER_NAME:
        required: true
        type: string
      ECS_CONTAINER_NAME:
        required: true
        type: string
      ECS_SERVICE_NAME:
        required: true
        type: string
      ECS_TASK_DEFINITION_NAME:
        required: true
        type: string
      VERSION_SUFFIX:
        required: true
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_REGION:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  push_to_ecr:
    uses: keevosoftwares/actions/.github/workflows/publishing-to-ecr-v1.yml@master
    with:
      DOCKER_FILE: ${{ inputs.DOCKER_FILE }}
      PATH_PROJECT: ${{ inputs.PATH_PROJECT }}
      CONFIG_FILE: ${{ inputs.CONFIG_FILE }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOTNET_VERSION: ${{ inputs.DOTNET_VERSION }}
      ECR_IMAGE: ${{ inputs.ECR_IMAGE }}
      VERSION_SUFFIX: ${{ inputs.VERSION_SUFFIX }}

  publish_to_ecs:
    name: Distribuindo aplicação no ECS
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: push_to_ecr
    steps:
      - name: Configurando as credenciais na AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Baixando definição de task do ECR
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.ECS_TASK_DEFINITION_NAME }} \
          --query taskDefinition > task-definition.json

      - name: Baixando a nova imagem para definição de task do ECR
        id: task-def-prod
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ inputs.ECS_CONTAINER_NAME }}
          image: ${{ inputs.ECR_IMAGE }}

      - name: Atualizando definição de task do ECR
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def-prod.outputs.task-definition }}
          service: ${{ inputs.ECS_SERVICE_NAME }}
          cluster: ${{ inputs.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
