name: Publicação de pacotes .NET

on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      DOTNET_VERSION:
        required: true
        type: string
      NUGET_SOURCE:
        required: true
        type: string
      OWNER:
        required: true
        type: string
      VERSION_SUFFIX:
        required: true
        type: string
      IGNORE_VERSIONS:
        required: true
        type: string

    secrets:
      GIT_TOKEN:
        required: true

jobs:
  build:
    name: Compilando pacote ${{ inputs.PROJECT_NAME }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions: write-all
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}

    steps:
      - uses: actions/checkout@v4
      - name: Setando versão do .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.DOTNET_VERSION }}

      - name: Restaurando dependências
        run: Environment=${{ inputs.VERSION_SUFFIX }} dotnet restore /p:Configuration="Release"

      - name: Compilando projeto
        run: Environment=${{ inputs.VERSION_SUFFIX }} dotnet build -c Release --version-suffix ${{ inputs.VERSION_SUFFIX }} -o out

      - name: Exclusão do pacote no nuget
        uses: actions/delete-package-versions@v4
        with:
          owner: ${{ inputs.OWNER }}
          package-name: ${{ inputs.PROJECT_NAME }}
          token: ${{ secrets.GIT_TOKEN }}
          package-type: nuget
          ignore-versions: ${{ inputs.IGNORE_VERSIONS }}

      - name: Publicando pacote
        run: |
          cd out
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.GIT_TOKEN }} --source ${{ inputs.NUGET_SOURCE }} --skip-duplicate
